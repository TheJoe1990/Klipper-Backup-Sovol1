# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[tool T0]
tool_number: 0
extruder: extruder
params_type: 'rods_mini_hookon'
#fan: 'T0_partfan'
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
# Position with the toolhead aligned with the dock
params_type: 'sc'
#This is the path the tool change takes. Shouldn't have to change it. Unless
#you are using a custom dock
params_sc_path: [{'y':9.5 ,'z':4}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-10, 'y':0}, {'z':-10, 'y':16}]
params_park_x: 323
params_park_y: 8
params_park_z: 316
params_safe_y: 100
params_close_y: 75

params_input_shaper_freq_x: 35.4
params_input_shaper_freq_y: 38.6
params_max_accel: 4500

[mcu T0]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_390027001550425539383920-if00
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_43004D0009504D4D35383820-if00


[extruder]
step_pin: T0:PD0
dir_pin: T0:PD1
enable_pin: !T0:PD2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.720466 #4.637
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: T0:PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: T0:PA3
control: pid
pid_Kp: 27.787
pid_Ki: 3.430
pid_Kd: 56.271
min_temp: 0
max_temp: 300
filament_diameter: 1.750
max_extrude_only_distance: 500
max_extrude_cross_section: 5
max_extrude_only_velocity: 120 
pressure_advance: 0.025                #to be calibrated 
#pressure_advance_smooth_time: 0.03     #to be calibrated
#pid_Kp=27.787 pid_Ki=3.430 pid_Kd=56.271

[tmc2209 extruder]
uart_pin: T0:PA15
interpolate: true
run_current: 0.85 #**
sense_resistor: 0.11 #**
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

# embedded temperature sensor
[temperature_sensor T0]
sensor_type: temperature_mcu
sensor_mcu: T0
min_temp: 0
max_temp: 100

[fan_generic T0_partfan]
pin: T0:PA0

[heater_fan T0_hotend_fan]
pin: T0:PA1
heater: extruder
heater_temp: 50.0

[neopixel T0_hotend_rgb]
pin: T0:PD3

[adxl345]
cs_pin: T0:PB12
spi_software_sclk_pin: T0:PB10
spi_software_mosi_pin: T0:PB11
spi_software_miso_pin: T0:PB2
axes_map: x,y,z

[gcode_macro T0]
variable_color: ""
gcode:
  SELECT_TOOL T=0

[tool_probe T0]
pin: T0:PB8
tool: 0
# You can find the z_offset option in the printer.cfg
z_offset : -0.715 #inverted from baby step menu
speed: 15.0
samples: 3
sample_retract_dist: 2.0
lift_speed: 10
samples_result: median
samples_tolerance: 0.006
samples_tolerance_retries: 10

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% if printer.toolhead.extruder == "extruder" %}
        {% set EXTRUDER = "extruder" %}
    {% else %}
        {% set EXTRUDER = printer.toolhead.extruder %}
    {% endif %}
    {% set ACTUAL_TEMP = printer[EXTRUDER].temperature %}
    {% set TARGET_TEMP = printer[EXTRUDER].target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{PROBE_TEMP}
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR={EXTRUDER} MAXIMUM={MAX_TEMP}
        {% endif %}
    {% endif %}



[filament_switch_sensor switch_sensor]
switch_pin: ^nest:PB5
pause_on_runout: False  # Disable automatic pause to handle manually
runout_gcode:
  {% if printer.toolhead.extruder == "extruder" and printer.print_stats.state == "printing" %}
      PAUSE
      M117 Filament switch runout on T0
      RESPOND TYPE='echo' MSG='Filament switch runout on T0'
  {% endif %}
insert_gcode:
  {% if printer.toolhead.extruder == "extruder" and printer.print_stats.state == "printing" %}
      M117 Filament switch inserted
      RESPOND TYPE='echo' MSG='Filament switch inserted'
  {% endif %}

[filament_motion_sensor encoder_sensor]
switch_pin: ^nest:PB4
detection_length: 2.88
extruder: extruder  # REQUIRED for filament_motion_sensor
pause_on_runout: False  # Disable automatic pause to handle manually
runout_gcode:
  {% if printer.toolhead.extruder == "extruder" and printer.print_stats.state == "printing" %}
      PAUSE
      M117 Filament encoder runout on T0
      RESPOND TYPE='echo' MSG='Filament encoder runout on T0'
  {% endif %}
insert_gcode:
  {% if printer.toolhead.extruder == "extruder" and printer.print_stats.state == "printing" %}
      M117 Filament encoder inserted
      RESPOND TYPE='echo' MSG='Filament encoder inserted'
  {% endif %}

